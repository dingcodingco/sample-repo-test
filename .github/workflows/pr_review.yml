name: PR Auto Review

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]

jobs:
  review:
    # Skip draft PRs
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Claude Code Review
        id: claude_review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            You are reviewing PR #${{ github.event.pull_request.number }} in ${{ github.repository }}.

            Please perform a thorough code review focusing on:

            üîí **Security Issues**:
            - SQL injection vulnerabilities
            - XSS vulnerabilities
            - Exposed API keys or credentials
            - Insecure data handling
            - CORS and authentication issues

            üêõ **Potential Bugs**:
            - Null/undefined handling
            - Type mismatches
            - Logic errors
            - Edge cases

            üìä **Code Quality**:
            - Code clarity and readability
            - Maintainability
            - DRY principle violations
            - Proper error handling

            ‚ö° **Performance**:
            - Inefficient algorithms
            - Memory leaks
            - Unnecessary operations

            üìù **Best Practices**:
            - Adherence to language conventions
            - Proper documentation
            - Test coverage

            Please provide specific, actionable feedback. Point out the exact lines with issues.
            Use markdown formatting for clarity. Be constructive and helpful.

            If the code looks good overall, respond with "LGTM üëç" and highlight any particularly good practices you noticed.

      - name: Extract and Post Review Comment
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');

            // Try to find and read the Claude output file
            const outputFile = '/home/runner/work/_temp/claude-execution-output.json';

            try {
              if (fs.existsSync(outputFile)) {
                const content = fs.readFileSync(outputFile, 'utf8');
                const data = JSON.parse(content);

                if (data.result) {
                  // Post the review as a PR comment
                  const comment = await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: `## ü§ñ AI Code Review by Claude\n\n${data.result}\n\n---\n*This review was generated automatically by Claude AI*`
                  });

                  console.log('Review comment posted successfully!');
                  console.log('Comment URL:', comment.data.html_url);
                } else {
                  console.log('No review result found in output');
                }
              } else {
                console.log('Claude output file not found');
              }
            } catch (error) {
              console.error('Error posting review:', error);
            }